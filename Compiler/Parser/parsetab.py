
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COLON DIVIDE ELSE EQUAL EQUALTO FOR GREATEQUAL GREATER IF INPUT INTEGERVARIBABLE LESS LESSEQUAL LPAREN MINUS MOD NUMBER PLUS PRINT RPAREN STRING STRINGVARIBABLE TIMES WHILEstatement_list : statementstatement : storestatement : readstatement : writestatement : forstatement : whilestatement : ifwrite : PRINT LPAREN expression RPARENwrite : PRINT LPAREN STRINGVARIBABLE RPARENwrite : PRINT LPAREN INTEGERVARIBABLE RPARENwrite : PRINT LPAREN NUMBER RPARENwrite : PRINT LPAREN STRING RPARENif : IF expression COLON bodyif : IF expression COLON body ELSE COLON bodywhile : WHILE expression COLON bodyfor : FOR expression COLON bodyread : INPUT LPAREN RPARENstore : termstore : expressionbody : statement_listbody : statementexpression : termexpression : expression PLUS term\n                  | expression MINUS term\n                  | expression TIMES term\n                  | expression DIVIDE term\n                  | expression MOD term\n                  | expression LESS term\n                  | expression LESSEQUAL term\n                  | expression GREATER term\n                  | expression GREATEQUAL termterm : term TIMES factorterm : term DIVIDE factorterm : term MOD factorterm : term LESS factorterm : term GREATER factorterm : term GREATEQUAL factorterm : term EQUAL factorterm : term EQUALTO factorterm : factorfactor : NUMBERfactor : LPAREN expression RPARENfactor : LPAREN STRINGVARIBABLE RPARENfactor : LPAREN INTEGERVARIBABLE RPAREN'
    
_lr_action_items = {'INPUT':([0,71,72,73,85,],[11,11,11,11,11,]),'PRINT':([0,71,72,73,85,],[13,13,13,13,13,]),'FOR':([0,71,72,73,85,],[15,15,15,15,15,]),'WHILE':([0,71,72,73,85,],[16,16,16,16,16,]),'IF':([0,71,72,73,85,],[17,17,17,17,17,]),'NUMBER':([0,12,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,41,71,72,73,85,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,69,14,14,14,14,]),'LPAREN':([0,11,12,13,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,41,71,72,73,85,],[12,36,12,41,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'$end':([1,2,3,4,5,6,7,8,9,10,14,18,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,74,75,76,77,78,79,80,81,82,83,86,],[0,-1,-2,-3,-4,-5,-6,-7,-18,-19,-41,-40,-32,-33,-34,-35,-36,-37,-38,-39,-23,-24,-25,-26,-27,-28,-29,-30,-31,-17,-42,-43,-44,-8,-9,-10,-11,-12,-16,-20,-1,-15,-13,-14,]),'ELSE':([3,4,5,6,7,8,9,10,14,18,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,74,75,76,77,78,79,80,81,82,83,86,],[-2,-3,-4,-5,-6,-7,-18,-19,-41,-40,-32,-33,-34,-35,-36,-37,-38,-39,-23,-24,-25,-26,-27,-28,-29,-30,-31,-17,-42,-43,-44,-8,-9,-10,-11,-12,-16,-20,-1,-15,84,-14,]),'TIMES':([9,10,14,18,37,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,69,],[19,29,-41,-40,29,19,29,29,29,-32,-33,-34,-35,-36,-37,-38,-39,19,19,19,19,19,19,19,19,19,-42,-43,-44,29,-41,]),'DIVIDE':([9,10,14,18,37,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,69,],[20,30,-41,-40,30,20,30,30,30,-32,-33,-34,-35,-36,-37,-38,-39,20,20,20,20,20,20,20,20,20,-42,-43,-44,30,-41,]),'MOD':([9,10,14,18,37,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,69,],[21,31,-41,-40,31,21,31,31,31,-32,-33,-34,-35,-36,-37,-38,-39,21,21,21,21,21,21,21,21,21,-42,-43,-44,31,-41,]),'LESS':([9,10,14,18,37,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,69,],[22,32,-41,-40,32,22,32,32,32,-32,-33,-34,-35,-36,-37,-38,-39,22,22,22,22,22,22,22,22,22,-42,-43,-44,32,-41,]),'GREATER':([9,10,14,18,37,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,69,],[23,34,-41,-40,34,23,34,34,34,-32,-33,-34,-35,-36,-37,-38,-39,23,23,23,23,23,23,23,23,23,-42,-43,-44,34,-41,]),'GREATEQUAL':([9,10,14,18,37,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,69,],[24,35,-41,-40,35,24,35,35,35,-32,-33,-34,-35,-36,-37,-38,-39,24,24,24,24,24,24,24,24,24,-42,-43,-44,35,-41,]),'EQUAL':([9,14,18,40,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,69,],[25,-41,-40,25,-32,-33,-34,-35,-36,-37,-38,-39,25,25,25,25,25,25,25,25,25,-42,-43,-44,-41,]),'EQUALTO':([9,14,18,40,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,69,],[26,-41,-40,26,-32,-33,-34,-35,-36,-37,-38,-39,26,26,26,26,26,26,26,26,26,-42,-43,-44,-41,]),'PLUS':([9,10,14,18,37,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,69,],[-22,27,-41,-40,27,-22,27,27,27,-32,-33,-34,-35,-36,-37,-38,-39,-23,-24,-25,-26,-27,-28,-29,-30,-31,-42,-43,-44,27,-41,]),'MINUS':([9,10,14,18,37,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,69,],[-22,28,-41,-40,28,-22,28,28,28,-32,-33,-34,-35,-36,-37,-38,-39,-23,-24,-25,-26,-27,-28,-29,-30,-31,-42,-43,-44,28,-41,]),'LESSEQUAL':([9,10,14,18,37,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,69,],[-22,33,-41,-40,33,-22,33,33,33,-32,-33,-34,-35,-36,-37,-38,-39,-23,-24,-25,-26,-27,-28,-29,-30,-31,-42,-43,-44,33,-41,]),'STRINGVARIBABLE':([12,41,],[38,67,]),'INTEGERVARIBABLE':([12,41,],[39,68,]),'RPAREN':([14,18,36,37,38,39,40,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,70,],[-41,-40,62,63,64,65,-22,-32,-33,-34,-35,-36,-37,-38,-39,-23,-24,-25,-26,-27,-28,-29,-30,-31,-42,-43,-44,74,75,76,77,78,]),'COLON':([14,18,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,84,],[-41,-40,-22,71,72,73,-32,-33,-34,-35,-36,-37,-38,-39,-23,-24,-25,-26,-27,-28,-29,-30,-31,-42,-43,-44,85,]),'STRING':([41,],[70,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement_list':([0,71,72,73,85,],[1,80,80,80,80,]),'statement':([0,71,72,73,85,],[2,81,81,81,81,]),'store':([0,71,72,73,85,],[3,3,3,3,3,]),'read':([0,71,72,73,85,],[4,4,4,4,4,]),'write':([0,71,72,73,85,],[5,5,5,5,5,]),'for':([0,71,72,73,85,],[6,6,6,6,6,]),'while':([0,71,72,73,85,],[7,7,7,7,7,]),'if':([0,71,72,73,85,],[8,8,8,8,8,]),'term':([0,12,15,16,17,27,28,29,30,31,32,33,34,35,41,71,72,73,85,],[9,40,40,40,40,53,54,55,56,57,58,59,60,61,40,9,9,9,9,]),'expression':([0,12,15,16,17,41,71,72,73,85,],[10,37,42,43,44,66,10,10,10,10,]),'factor':([0,12,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,41,71,72,73,85,],[18,18,18,18,18,45,46,47,48,49,50,51,52,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'body':([71,72,73,85,],[79,82,83,86,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement_list","S'",1,None,None,None),
  ('statement_list -> statement','statement_list',1,'p_statement_list_statement','parser.py',10),
  ('statement -> store','statement',1,'p_statement_store','parser.py',15),
  ('statement -> read','statement',1,'p_statement_read','parser.py',19),
  ('statement -> write','statement',1,'p_statement_write','parser.py',23),
  ('statement -> for','statement',1,'p_statement_for','parser.py',27),
  ('statement -> while','statement',1,'p_statement_while','parser.py',31),
  ('statement -> if','statement',1,'p_statement_if','parser.py',35),
  ('write -> PRINT LPAREN expression RPAREN','write',4,'p_write_print_lparen_expression_rparen','parser.py',43),
  ('write -> PRINT LPAREN STRINGVARIBABLE RPAREN','write',4,'p_write_print_lparen_string_var_rparen','parser.py',47),
  ('write -> PRINT LPAREN INTEGERVARIBABLE RPAREN','write',4,'p_write_print_lparen_int_var_rparen','parser.py',51),
  ('write -> PRINT LPAREN NUMBER RPAREN','write',4,'p_write_print_lparen_int_rparen','parser.py',55),
  ('write -> PRINT LPAREN STRING RPAREN','write',4,'p_write_print_lparen_string_rparen','parser.py',59),
  ('if -> IF expression COLON body','if',4,'p_if_expression','parser.py',63),
  ('if -> IF expression COLON body ELSE COLON body','if',7,'p_if_expression_else','parser.py',67),
  ('while -> WHILE expression COLON body','while',4,'p_while_term','parser.py',71),
  ('for -> FOR expression COLON body','for',4,'p_for_term','parser.py',75),
  ('read -> INPUT LPAREN RPAREN','read',3,'p_read_term','parser.py',79),
  ('store -> term','store',1,'p_store_term','parser.py',83),
  ('store -> expression','store',1,'p_store_expression','parser.py',87),
  ('body -> statement_list','body',1,'p_body_statement_list','parser.py',92),
  ('body -> statement','body',1,'p_body_statement','parser.py',96),
  ('expression -> term','expression',1,'p_expression_term','parser.py',102),
  ('expression -> expression PLUS term','expression',3,'p_expression','parser.py',107),
  ('expression -> expression MINUS term','expression',3,'p_expression','parser.py',108),
  ('expression -> expression TIMES term','expression',3,'p_expression','parser.py',109),
  ('expression -> expression DIVIDE term','expression',3,'p_expression','parser.py',110),
  ('expression -> expression MOD term','expression',3,'p_expression','parser.py',111),
  ('expression -> expression LESS term','expression',3,'p_expression','parser.py',112),
  ('expression -> expression LESSEQUAL term','expression',3,'p_expression','parser.py',113),
  ('expression -> expression GREATER term','expression',3,'p_expression','parser.py',114),
  ('expression -> expression GREATEQUAL term','expression',3,'p_expression','parser.py',115),
  ('term -> term TIMES factor','term',3,'p_term_times','parser.py',148),
  ('term -> term DIVIDE factor','term',3,'p_term_div','parser.py',153),
  ('term -> term MOD factor','term',3,'p_term_mod','parser.py',158),
  ('term -> term LESS factor','term',3,'p_term_less','parser.py',163),
  ('term -> term GREATER factor','term',3,'p_term_greater','parser.py',168),
  ('term -> term GREATEQUAL factor','term',3,'p_term_greatequal','parser.py',173),
  ('term -> term EQUAL factor','term',3,'p_term_equal','parser.py',178),
  ('term -> term EQUALTO factor','term',3,'p_term_equalto','parser.py',183),
  ('term -> factor','term',1,'p_term_factor','parser.py',188),
  ('factor -> NUMBER','factor',1,'p_factor_num','parser.py',193),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','parser.py',202),
  ('factor -> LPAREN STRINGVARIBABLE RPAREN','factor',3,'p_factor_string','parser.py',206),
  ('factor -> LPAREN INTEGERVARIBABLE RPAREN','factor',3,'p_factor_int','parser.py',210),
]
